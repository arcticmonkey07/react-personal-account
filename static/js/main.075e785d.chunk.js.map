{"version":3,"sources":["base.js","Auth.js","Components/Home.js","Components/Login.js","Components/SignUp.js","Components/ContactInput.js","Components/Contacts.js","Components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","auth","onAuthStateChanged","user","Provider","value","withRouter","history","useContext","email","onClick","signOut","to","handleLogin","useCallback","event","a","preventDefault","target","elements","password","signInWithEmailAndPassword","push","alert","onSubmit","name","type","placeholder","handleSignUp","createUserWithEmailAndPassword","ContactInput","contactName","setName","onChange","e","firestore","collection","doc","id","set","delete","Contacts","contacts","setContacts","newContact","setNewContact","searchName","setSearchName","getContacts","onSnapshot","snapshot","contactsData","forEach","data","console","log","db","orderBy","startAt","endAt","get","docs","map","fetchData","add","item","key","App","className","exact","path","component","Home","Login","SignUp","Profile","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.075e785d.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n});\r\n\r\nexport default app;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport app from \"./base\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    app.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setPending(false);\r\n    });\r\n  }, []);\r\n\r\n  if (pending) {\r\n    return <>Loading...</>;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport app from \"../base\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth\";\r\n\r\nconst Home = ({ history }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n\r\n      {currentUser ? (\r\n        <div>\r\n          <p>{currentUser.email}</p>\r\n          <button\r\n            onClick={() => {\r\n              app.auth().signOut();\r\n            }}\r\n          >\r\n            Sign out\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Link to=\"/signup\">\r\n            <button>Sign Up</button>\r\n          </Link>\r\n          <Link to=\"/login\">\r\n            <button>Log In</button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport app from \"../base\";\r\nimport { AuthContext } from \"../Auth\";\r\n\r\nconst Login = ({ history }) => {\r\n  const handleLogin = useCallback(\r\n    async (event) => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await app\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n        history.push(\"/profile\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Log in</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <label>\r\n          Email\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        </label>\r\n        <button type=\"submit\">Log In</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","import React, { useCallback } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport app from \"../base\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SignUp = ({ history }) => {\r\n  const handleSignUp = useCallback(\r\n    async (event) => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await app\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email.value, password.value);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sign Up</h1>\r\n      <form onSubmit={handleSignUp}>\r\n        <label>\r\n          Email\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        </label>\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n      <Link to=\"/\">\r\n        <button>Back</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"../base\";\r\n\r\nconst ContactInput = ({ contactName }) => {\r\n  const [name, setName] = useState(contactName.name);\r\n\r\n  const onUpdate = () => {\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\")\r\n      .doc(contactName.id)\r\n      .set({ ...contactName, name });\r\n  };\r\n\r\n  const onDelete = () => {\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\")\r\n      .doc(contactName.id)\r\n      .delete();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        value={name}\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n      />\r\n      <button onClick={onUpdate}>Update</button>\r\n      <button onClick={onDelete}>Delete</button>\r\n    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../base\";\r\nimport ContactInput from \"./ContactInput\";\r\n\r\nconst Contacts = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [newContact, setNewContact] = useState();\r\n  const [searchName, setSearchName] = useState();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = getContacts();\r\n  \r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const getContacts = () => {\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\").onSnapshot((snapshot) => {\r\n      const contactsData = [];\r\n      snapshot.forEach((doc) =>\r\n        contactsData.push({ ...doc.data(), id: doc.id })\r\n      );\r\n      setContacts(contactsData);\r\n    });\r\n  };\r\n\r\n  const onCreate = () => {\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\").add({ name: newContact });\r\n    setNewContact('');\r\n  };\r\n\r\n  const onSearch = () => {\r\n    const fetchData = async () => {\r\n      const db = firebase.firestore();\r\n      const data = await db\r\n        .collection(\"users\")\r\n        .orderBy(\"name\")\r\n        .startAt(searchName)\r\n        .endAt(searchName + \"\\uf8ff\")\r\n        .get();\r\n\r\n        setContacts(data.docs.map(doc => ({ ...doc.data(), id: doc.id})))\r\n      setSearchName('');\r\n    };\r\n    fetchData();\r\n\r\n    // const name = contacts.filter(item => item.name === searchName);\r\n    // setContacts(name);\r\n    // setSearchName('');\r\n  };\r\n\r\n  console.log(contacts);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contacts</h1>\r\n      <div>\r\n        <input\r\n          value={searchName}\r\n          onChange={(e) => {\r\n            setSearchName(e.target.value);\r\n          }}\r\n        />\r\n        <button onClick={onSearch}>Search</button>\r\n        <button onClick={getContacts}>Show All</button>\r\n      </div>\r\n      <div>\r\n        <input\r\n          value={newContact}\r\n          onChange={(e) => {\r\n            setNewContact(e.target.value);\r\n          }}\r\n        />\r\n        <button onClick={onCreate}>Create</button>\r\n      </div>\r\n      <ul>\r\n        {contacts.map((item) => (\r\n          <li key={item.id}>\r\n            {item.name}\r\n            <ContactInput contactName={item} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport app from \"../base\";\r\nimport { AuthContext } from \"../Auth\";\r\nimport Contacts from \"./Contacts\";\r\n\r\nconst Profile = ({ history }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Profile</h1>\r\n      <p>{currentUser.email}</p>\r\n      <button\r\n        onClick={() => {\r\n          app.auth().signOut();\r\n        }}\r\n      >\r\n        Sign out\r\n      </button>\r\n\r\n      <Contacts />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Profile);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport Login from \"./Components/Login\";\nimport SignUp from \"./Components/SignUp\";\nimport { AuthProvider } from \"./Auth\";\nimport Profile from \"./Components/Profile\";\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <HashRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/profile\" component={Profile} />\n        </div>\n      </HashRouter>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}